#!/bin/bash
copyright () {
	echo -e "daisync-plot, plot tool for daisync.
Written by Manhong Dai, MBNI, University of Michigan.
This program is free software; you can redistribute it and/or modify it under
the terms of the GNU GPL v3, and these copyright/history must stay
untouched.
There is NO WARRANTY, to the extent permitted by law.
See http://daisync.sf.net for detail:

History:
4.0.2, Mar 02, 2017, create increment for 0000 folder only
3.0.1
"
	exit 0
}
usage () {
	echo -e "plot png report of all snapshots at DEST to file OUTPUT
Usage:: daisync-plot [OPTIONS] DEST1 DEST2...
  -o OUTPUT	generate png image
  -h		display this help and exit
  -v		output version information and exit
DEST is the backup folder of daisync."
	exit 1
}
for CMD in gnuplot bc
do
	if ! which $CMD &> /dev/null
	then
		echo "Command $CMD is needed for daisync-plot"
		exit 1
	fi
done

ARGS=("$@")
while getopts "o:hv" FLAG
do
	case "$FLAG" in
		o) 
			OUTPUT="$OPTARG"
			;;
		h) 
			usage
			;;
		v)
			copyright
			;;
		*) 
			echo "Wrong option"
			usage
			;;
	esac
done
if [ -z "$OUTPUT" ]
then
	echo "-o is missing, use '-h' to see help"
	exit 1
fi

for ((IND=OPTIND-1; IND<$#; IND++))
do
	DEST="${ARGS[$IND]}"
	if [ ! -d "$DEST" ]
	then
		echo "Folder '$DEST' doesn't exist"
	else
		rm -f "$DEST/.daisync-increment.tmp" "$DEST/.daisync-available.tmp" "$DEST/.daisync-duration.tmp" "$DEST/.daisync-percentage.tmp"
		find "$DEST" -maxdepth 1 -type d -name "[0-9][0-9][0-9][0-9]" | while read IDX
		do
			NNNN=$(basename "$IDX")
			echo -en "$NNNN\t" >> "$DEST/.daisync-increment.tmp"
			if [ -f "$IDX/.daisync-increment" ] 
			then
				cat "$IDX/.daisync-increment"
			elif [ "$IDX" = "0000" ]
			then
				find "$IDX" -type f -links 1 -ls |awk '{SUM += $7}END {print SUM/1048576}' | tee "$IDX/.daisync-increment"
			fi >> "$DEST/.daisync-increment.tmp"
			if [ -f "$IDX/.daisync-df" ]
			then
				echo -en "$NNNN\t" >> "$DEST/.daisync-available.tmp"
				tail -n 1 "$IDX/.daisync-df" |awk '{print $4}' >> "$DEST/.daisync-available.tmp"
				echo -en "$NNNN\t" >> "$DEST/.daisync-percentage.tmp"
				tail -n 1 "$IDX/.daisync-df" |awk '{print $3 * 100 / $2}' >> "$DEST/.daisync-percentage.tmp"
			fi
			if [ -f "$IDX/.daisync-log" ]
			then
				DT1=$(head -n 1 "$IDX/.daisync-log"| cut -c 2- | cut -d ] -f 1)
				DT2=$(tail -n 1 "$IDX/.daisync-log"| cut -c 2- | cut -d ] -f 1)
				DUR=$(echo "scale=2;( $(date -d "$DT2" +%s) - $(date -d "$DT1" +%s) ) / 3600" | bc)
				echo -e "$NNNN\t$DUR" >> "$DEST/.daisync-duration.tmp"
			fi
		done 
	fi
done

TYPES=(increment available duration percentage)
TITLES=("Increment" "Available Space" "Backup Time" "Used Space")
YLABELS=(Megabyte Megabyte Hours Percentage)
XLABELS=("% snapshots ago. $(date '+%F %T'). http://daisync.sf.net" "" "" "")
ORIGINS=("0,0" "0,0.25" "0,0.5" "0,0.75")

(
echo -e "set terminal png size 800,800\nset output '${OUTPUT}\nset multiplot"
for ((IDX=0; IDX<${#TYPES[*]}; IDX++))
do
	TYPE=${TYPES[$IDX]}
	TITLE=${TITLES[$IDX]}
	echo -ne "set title '${TITLE}'\nset origin ${ORIGINS[$IDX]}\nset size 1,0.25\nset xlabel '${XLABELS[$IDX]}'\nset ylabel '${YLABELS[$IDX]}'\nplot"
	FIRST=TRUE
	for ((IND=OPTIND-1; IND<$#; IND++))
	do
		DEST="${ARGS[$IND]}"
        	[ ! -s "$DEST/.daisync-${TYPE}.tmp" ] && continue
		sort "$DEST/.daisync-${TYPE}.tmp" > "$DEST/.daisync-${TYPE}"
		[ "$FIRST" = "FALSE" ] && echo -n ","
		echo -n " '$DEST/.daisync-${TYPE}' title '$DEST' with lines"
		FIRST=FALSE
	done
	echo
done
) | gnuplot #&> /dev/null
for ((IDX=0; IDX<${#TYPES[*]}; IDX++))
do
	TYPE=${TYPES[$IDX]}
	for ((IND=OPTIND-1; IND<$#; IND++))
	do
		DEST="${ARGS[$IND]}"
		rm -f "$DEST/.daisync-${TYPE}" "$DEST/.daisync-${TYPE}.tmp"
	done
done
